['ppeg.$compileTo'] = void;
['ppeg.$target'] = "[':CaQA:test1.grammar']";
['ppeg.AND'] = function {{$b1=::ppi;(::pps{::ppi}==='&')&&{++::ppi;true}&&::ppeg.Spacing($0)||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}}};
['ppeg.Action'] = function {{$b1=::ppi;{$m1=::ppi;::ppeg.PikaBlock($0)&&{$b=::pps{$m1:::ppi-$m1};true}}&&::ppeg.Spacing($0)&&{{ for ($s = '{'; $b != ''; ) { $s #= $b{:i = find($b, "$/\t\r\n")}; if (($b = $b{i:}){0} == '$') { if ($b{:8} == "\x24\x24parser") { $s #= ::ppeg.$target; $b = $b{8:} } else if ($b{:3} == "\x24\x24s") { $s #= '::pps'; $b = $b{3:} } else if ($b{:3} == "\x24\x24i") { $s #= '::ppi'; $b = $b{3:} } else if ($b{:2} == "\x24\x24") { $s #= '[$0]'; $b = $b{2:} } else { $s #= '$'; $b = $b{1:} } } else if ($b{:2} == '//') { $s #= $b{:i = find($b, "\n") + 1}; $b = $b{i:} }
 else if ($b{0} == '/') { $s #= '/'; $b = $b{1:} } else { if ($s{length($s) - 1} != ' ') $s #= ' '; $b = $b{span($b, "\t\r\n "):} } }; [$0] = $s # ';true}' } ;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}}};
['ppeg.Actions'] = function { { [$2] = '' }; for (; { $i1 = [$1]; $m1 = $i1; ::ppeg.PikaBlock($0, @$i1, $2) && { $b = $0{$m1:$i1 - $m1}; ::ppeg.Spacing($0, @$i1, $2) && { { [$2] = ::ppeg.$cat([$2], bake("{}<($b)>; \1", '<(', ')>')) }; [$1] = $i1; true } } }; ); true };
['ppeg.CLOSE'] = function {{$b1=::ppi;(::pps{::ppi}===')')&&{++::ppi;true}&&::ppeg.Spacing($0)||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}}};
['ppeg.COLON'] = function {{$b1=::ppi;(::pps{::ppi}===':')&&{++::ppi;true}&&::ppeg.Spacing($0)||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}}};
['ppeg.Capture'] = function {{$b1=::ppi;::ppeg.Variable(@$v)&&::ppeg.EQUALS($0)&&::ppeg.Tagged($0)&&{{ [$0] = '{$m' # [$0].vi # '=::ppi;' # [$0] # '&&{' # $v # '=::pps{$m' # [$0].vi # ':' # '::ppi-$m' # [$0].vi # '};true}}' } ;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}||::ppeg.Tagged($0)||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}}};
['ppeg.Char'] = function {{$b1=::ppi;(::pps{::ppi}==='\')&&{++::ppi;true}&&{$m1=::ppi;(span(::pps{::ppi},"nrt'\"[]\\")==1)&&{++::ppi;true}&&{$x=::pps{$m1:::ppi-$m1};true}}&&{{ [$0] = "\n\r\t'\"[]\\"{find("nrt'\"[]\\", $x)} } ;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}||(::pps{::ppi}==='\')&&{++::ppi;true}&&{$m1=::ppi;{$b2=::ppi;(span(::pps{::ppi},'0123')==1)&&{++::ppi;true}&&(span(::pps{::ppi},'01234567')==1)&&{++::ppi;true}&&(span(::pps{::ppi},'01234567')==1)&&{++::ppi;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b2;false}}&&{$x=::pps{$m1:::ppi-$m1};true}}&&{{ [$0] = char($x{0} * 64 + $x{1} * 8 + $x{2}) } ;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}||(::pps{::ppi}==='\')&&{++::ppi;true}&&{$m1=::ppi;{$b2=::ppi;(span(::pps{::ppi},'01234567')==1)&&{++::ppi;true}&&(span(::pps{::ppi},'01234567')==1)&&{++::ppi;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b2;false}}&&{$x=::pps{$m1:::ppi-$m1};true}}&&{{ [$0] = char($x{0} * 8 + $x{1}) } ;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}||(::pps{::ppi}==='\')&&{++::ppi;true}&&{$m1=::ppi;{$b2=::ppi;(span(::pps{::ppi},'01234567')==1)&&{++::ppi;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b2;false}}&&{$x=::pps{$m1:::ppi-$m1};true}}&&{{ [$0] = char($x{0}) } ;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}||{$l1=::ppi;$x=(span(::pps{::ppi},"\\\x00\x01\x02\x03\x04\x05\x06\a\b\t\n\v\f\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f")==1)&&{++::ppi;true};::ppi=$l1;!$x}&&{$m1=::ppi;(::pps{::ppi}!='')&&{++::ppi;true}&&{[$0]=::pps{$m1:::ppi-$m1};true}}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}}};
['ppeg.Class'] = function {{$b1=::ppi;{{ [$0] = '' } ;true}&&(::pps{::ppi}==='[')&&{++::ppi;true}&&{for(;{$b2=::ppi;{$l2=::ppi;$x=(::pps{::ppi}===']')&&{++::ppi;true};::ppi=$l2;!$x}&&::ppeg.Range(@$r)&&{{ [$0] #= $r } ;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b2;false}};);true}&&(::pps{::ppi}===']')&&{++::ppi;true}&&::ppeg.Spacing($0)||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}}};
['ppeg.Comment'] = function {{$b1=::ppi;(::pps{::ppi}==='#')&&{++::ppi;true}&&{for(;{$b2=::ppi;{$l2=::ppi;$x=::ppeg.EndOfLine($0);::ppi=$l2;!$x}&&(::pps{::ppi}!='')&&{++::ppi;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b2;false}};);true}&&{$b2=::ppi;::ppeg.EndOfLine($0)||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b2;false}||::ppeg.EndOfFile($0)||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b2;false}}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}}};
['ppeg.DOT'] = function {{$b1=::ppi;(::pps{::ppi}==='.')&&{++::ppi;true}&&::ppeg.Spacing($0)||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}}};
['ppeg.Definition'] = function {{$b1=::ppi;::ppeg.Identifier(@$id)&&::ppeg.LEFTARROW($0)&&{{ [$0].tag = '$0'; [$0].vi = 0 } ;true}&&::ppeg.Expression($0)&&{{ [::ppeg.$compileTo][$id] = evaluate('function{' # [$0] # '}') } ;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}}};
['ppeg.EQUALS'] = function {{$b1=::ppi;(::pps{::ppi}==='=')&&{++::ppi;true}&&::ppeg.Spacing($0)||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}}};
['ppeg.EndOfFile'] = function {{$b1=::ppi;{$l1=::ppi;$x=(::pps{::ppi}!='')&&{++::ppi;true};::ppi=$l1;!$x}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}}};
['ppeg.EndOfLine'] = function {{$b1=::ppi;(::pps{::ppi:2}==="\r\n")&&{::ppi+=2;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}||(::pps{::ppi}==="\n")&&{++::ppi;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}||(::pps{::ppi}==="\r")&&{++::ppi;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}}};
['ppeg.Expression'] = function {{$b1=::ppi;{{ $s.vi = [$0].vi + 1; $s.tag = [$0].tag; [$0] = '' } ;true}&&::ppeg.Sequence(@$s)&&{{ [$0] = $s } ;true}&&{for(;{$b2=::ppi;::ppeg.SLASH($0)&&::ppeg.Sequence(@$s)&&{{ [$0] #= '||' # $s } ;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b2;false}};);true}&&{{ [$0] = '{$b' # $s.vi # '=::ppi;' # [$0] # '}' } ;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}}};
['ppeg.Grammar'] = function {{$b1=::ppi;::ppeg.Spacing($0)&&{for(;::ppeg.Definition($0););true}&&::ppeg.EndOfFile($0)||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}}};
['ppeg.IdentCont'] = function {{$b1=::ppi;::ppeg.IdentStart($0)||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}||(span(::pps{::ppi},'0123456789')==1)&&{++::ppi;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}}};
['ppeg.IdentStart'] = function {{$b1=::ppi;(span(::pps{::ppi},'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_')==1)&&{++::ppi;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}}};
['ppeg.Identifier'] = function {{$b1=::ppi;{$m1=::ppi;{$b2=::ppi;::ppeg.IdentStart($0)&&{for(;::ppeg.IdentCont($0););true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b2;false}}&&{[$0]=::pps{$m1:::ppi-$m1};true}}&&::ppeg.Spacing($0)||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}}};
['ppeg.LEFTARROW'] = function {{$b1=::ppi;(::pps{::ppi:2}==='<-')&&{::ppi+=2;true}&&::ppeg.Spacing($0)||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}}};
['ppeg.Literal'] = function {{$b1=::ppi;{{ [$0] = '' } ;true}&&(span(::pps{::ppi},"'")==1)&&{++::ppi;true}&&{for(;{$b2=::ppi;{$l2=::ppi;$x=(span(::pps{::ppi},"'")==1)&&{++::ppi;true};::ppi=$l2;!$x}&&::ppeg.Char(@$c)&&{{ [$0] #= $c } ;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b2;false}};);true}&&(span(::pps{::ppi},"'")==1)&&{++::ppi;true}&&::ppeg.Spacing($0)||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}||(span(::pps{::ppi},'"')==1)&&{++::ppi;true}&&{for(;{$b2=::ppi;{$l2=::ppi;$x=(span(::pps{::ppi},'"')==1)&&{++::ppi;true};::ppi=$l2;!$x}&&::ppeg.Char(@$c)&&{{ [$0] #= $c } ;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b2;false}};);true}&&(span(::pps{::ppi},'"')==1)&&{++::ppi;true}&&::ppeg.Spacing($0)||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}}};
['ppeg.NOT'] = function {{$b1=::ppi;(::pps{::ppi}==='!')&&{++::ppi;true}&&::ppeg.Spacing($0)||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}}};
['ppeg.OPEN'] = function {{$b1=::ppi;(::pps{::ppi}==='(')&&{++::ppi;true}&&::ppeg.Spacing($0)||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}}};
['ppeg.PLUS'] = function {{$b1=::ppi;(::pps{::ppi}==='+')&&{++::ppi;true}&&::ppeg.Spacing($0)||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}}};
['ppeg.PikaBlock'] = function {{$b1=::ppi;(::pps{::ppi}==='{')&&{++::ppi;true}&&{for(;{$b2=::ppi;{$l2=::ppi;$x=(::pps{::ppi}==='{')&&{++::ppi;true};::ppi=$l2;$x}&&::ppeg.PikaBlock($0)||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b2;false}||{$l2=::ppi;$x=(span(::pps{::ppi},"\"'")==1)&&{++::ppi;true};::ppi=$l2;$x}&&::ppeg.PikaString($0)||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b2;false}||{$l2=::ppi;$x={$b3=::ppi;(::pps{::ppi:2}==='/*')&&{::ppi+=2;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b3;false}||(::pps{::ppi:2}==='//')&&{::ppi+=2;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b3;false}};::ppi=$l2;$x}&&::ppeg.PikaComment($0)||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b2;false}||{$l2=::ppi;$x=(::pps{::ppi}==='}')&&{++::ppi;true};::ppi=$l2;!$x}&&(::pps{::ppi}!='')&&{++::ppi;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b2;false}};);true}&&(::pps{::ppi}==='}')&&{++::ppi;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}}};
['ppeg.PikaComment'] = function {{$b1=::ppi;(::pps{::ppi:2}==='/*')&&{::ppi+=2;true}&&{for(;{$b2=::ppi;{$l2=::ppi;$x=(::pps{::ppi:2}==='*/')&&{::ppi+=2;true};::ppi=$l2;!$x}&&(::pps{::ppi}!='')&&{++::ppi;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b2;false}};);true}&&(::pps{::ppi:2}==='*/')&&{::ppi+=2;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}||(::pps{::ppi:2}==='//')&&{::ppi+=2;true}&&{for(;{$b2=::ppi;{$l2=::ppi;$x=::ppeg.EndOfLine($0);::ppi=$l2;!$x}&&(::pps{::ppi}!='')&&{++::ppi;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b2;false}};);true}&&{$b2=::ppi;::ppeg.EndOfLine($0)||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b2;false}||::ppeg.EndOfFile($0)||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b2;false}}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}}};
['ppeg.PikaString'] = function {{$b1=::ppi;(::pps{::ppi}==='"')&&{++::ppi;true}&&{for(;{$b2=::ppi;{$b3=::ppi;(::pps{::ppi}==='\')&&{++::ppi;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b3;false}||{$l3=::ppi;$x=(::pps{::ppi}==='"')&&{++::ppi;true};::ppi=$l3;!$x}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b3;false}}&&(::pps{::ppi}!='')&&{++::ppi;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b2;false}};);true}&&(::pps{::ppi}==='"')&&{++::ppi;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}||(::pps{::ppi}==="'")&&{++::ppi;true}&&{for(;{$b2=::ppi;{$b3=::ppi;(::pps{::ppi:2}==="''")&&{::ppi+=2;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b3;false}||{$l3=::ppi;$x=(::pps{::ppi}==="'")&&{++::ppi;true};::ppi=$l3;!$x}&&(::pps{::ppi}!='')&&{++::ppi;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b3;false}}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b2;false}};);true}&&(::pps{::ppi}==="'")&&{++::ppi;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}}};
['ppeg.PikaVar'] = function {{$b1=::ppi;(span(::pps{::ppi},'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_')==1)&&{++::ppi;true}&&{for(;{$b2=::ppi;{(::pps{::ppi}==='.')&&{++::ppi;true};true}&&(span(::pps{::ppi},'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_0123456789')==1)&&{++::ppi;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b2;false}};);true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}}};
['ppeg.Prefix'] = function {{$b1=::ppi;{{ $c.vi = [$0].vi; $c.tag = [$0].tag } ;true}&&::ppeg.AND($0)&&::ppeg.Capture(@$c)&&{{ [$0] = '{$l' # [$0].vi # '=::ppi' # ';$x=' # $c # ';::ppi=$l' # [$0].vi # ';$x}' } ;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}||::ppeg.NOT($0)&&::ppeg.Capture(@$c)&&{{ [$0] = '{$l' # [$0].vi # '=::ppi' # ';$x=' # $c # ';::ppi=$l' # [$0].vi # ';!$x}' } ;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}||::ppeg.Capture($0)||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}}};
['ppeg.Primary'] = function {{$b1=::ppi;::ppeg.Identifier($0)&&{$l1=::ppi;$x=::ppeg.LEFTARROW($0);::ppi=$l1;!$x}&&{{ [$0] = ::ppeg.$target # '.' # [$0] # '(' # [$0].tag # ')' } ;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}||::ppeg.Literal($0)&&{{ l = length([$0]); if (l == 0) [$0] = 'true' else if (l == 1) [$0] = '(::pps{::ppi}===' # escape([$0]) # ')&&{++::ppi;true}' else [$0] = '(::pps{::ppi:' # l # '}===' # escape([$0]) # ')&&{::ppi+=' # l # ';true}' } ;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}||::ppeg.Class($0)&&{{ [$0] = '(span(::pps{::ppi},' # escape([$0]) # ')==1)&&{++::ppi;true}' } ;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}||::ppeg.DOT($0)&&{{ [$0] = '(::pps{::ppi}!='''')&&{++::ppi;true}' } ;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}||::ppeg.OPEN($0)&&::ppeg.Expression($0)&&::ppeg.CLOSE($0)||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}}};
['ppeg.QUESTION'] = function {{$b1=::ppi;(::pps{::ppi}==='?')&&{++::ppi;true}&&::ppeg.Spacing($0)||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}}};
['ppeg.Range'] = function {{$b1=::ppi;::ppeg.Char(@$f)&&(::pps{::ppi}==='-')&&{++::ppi;true}&&::ppeg.Char(@$t)&&{{ [$0] = ''; for (i = ordinal($f); i <= ordinal($t); ++i) [$0] #= char(i); } ;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}||::ppeg.Char(@[$0])||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}}};
['ppeg.SLASH'] = function {{$b1=::ppi;(::pps{::ppi}==='/')&&{++::ppi;true}&&::ppeg.Spacing($0)||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}}};
['ppeg.STAR'] = function {{$b1=::ppi;(::pps{::ppi}==='*')&&{++::ppi;true}&&::ppeg.Spacing($0)||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}}};
['ppeg.Sequence'] = function {{$b1=::ppi;{{ clone(@[$0], @$p); [$0] = '' } ;true}&&{for(;{$b2=::ppi;{$b3=::ppi;::ppeg.Prefix(@$p)||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b3;false}||::ppeg.Action(@$p)||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b3;false}}&&{{ [$0] #= (if ([$0] != '') '&&') # $p } ;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b2;false}};);true}&&{{ if ([$0] == '') [$0] = 'true' else [$0] #= '||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b' # [$0].vi # ';false}' } ;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}}};
['ppeg.Space'] = function {{$b1=::ppi;(::pps{::ppi}===' ')&&{++::ppi;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}||(::pps{::ppi}==="\t")&&{++::ppi;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}||::ppeg.EndOfLine($0)||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}}};
['ppeg.Spacing'] = function {{$b1=::ppi;{for(;{$b2=::ppi;::ppeg.Space($0)||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b2;false}||::ppeg.Comment($0)||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b2;false}};);true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}}};
['ppeg.Suffix'] = function {{$b1=::ppi;::ppeg.Primary($0)&&{{$b2=::ppi;::ppeg.QUESTION($0)&&{{ [$0] = '{' # [$0] # ';true}' } ;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b2;false}||::ppeg.STAR($0)&&{{ [$0] = '{for(;' # [$0] # ';);true}' } ;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b2;false}||::ppeg.PLUS($0)&&{{ [$0] = '{false;for(;' # [$0] # ';)true}' } ;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b2;false}};true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}}};
['ppeg.Tagged'] = function {{$b1=::ppi;::ppeg.Variable(@$v)&&::ppeg.COLON($0)&&{{ $t.vi = [$0].vi; $t.tag = '@' # $v } ;true}&&::ppeg.Suffix(@$t)&&{{ [$0] = $t } ;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}||::ppeg.Suffix($0)||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}}};
['ppeg.Variable'] = function {{$b1=::ppi;{$b2=::ppi;(::pps{::ppi:2}==='$$')&&{::ppi+=2;true}&&{{ [$0] = '[$0]' } ;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b2;false}||{$m2=::ppi;::ppeg.PikaVar($0)&&{[$0]=::pps{$m2:::ppi-$m2};true}}&&{{ [$0] = '$' # [$0] } ;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b2;false}}&&::ppeg.Spacing($0)||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}}};
['ppeg.compile'] = function {
	args(@target, @syntax);
	defaults(@::ppeg.$compileTo, void);
	swap(@::ppeg.$compileTo, @target);	// FIX : ugly non-reentrant solution here!
	::pps = syntax;
	::ppi = ::ppm = 0;
	if (!::ppeg.root(@o)) ppeg.fail("PPEG format error: ", syntax, ::ppm);
	swap(@::ppeg.$compileTo, @target);
	( void )
};
['ppeg.compileFunction'] = function {
vargs(@_s, , @$dd, @$iref, @$rule); defaults(@$dd, @$nil, @$iref, @$nil, @$rule, 'root');
root=>{$b1=_i;{{ fn = "function{\nvargs(@_s, , @$dd, @$iref, @$rule); defaults(@$dd, @$nil, @$iref, @$nil, @$rule, 'root');\n" } ;true}&&{{$b2=_i;Spacing($0)&&{$m2=_i;PikaBlock($0)&&{$b = _s{$m2:_i-$m2};true}}&&{{ fn #= replace($b, "\x24\x24parser.", '') # ';' } ;true}||{if(_i>_im)_im=_i;_i=$b2;false}};true}&&Spacing($0)&&Grammar(@$g)&&{{ fn #= $g; fn #= "_i = _im = 0; if ([$rule]($dd)) { [$iref] = _i; true } else { [$iref] = _im; false }\n}\n"; [$0] = evaluate(fn) } ;true}||{if(_i>_im)_im=_i;_i=$b1;false}};
Grammar=>{$b1=_i;{{ [$0] = '' } ;true}&&Spacing($0)&&{for(;{$b2=_i;Definition(@$d)&&{{ [$0] #= $d # ";\n" } ;true}||{if(_i>_im)_im=_i;_i=$b2;false}};);true}&&EndOfFile($0)||{if(_i>_im)_im=_i;_i=$b1;false}};
Definition=>{$b1=_i;Identifier(@$id)&&LEFTARROW($0)&&{{ [$0].tag = '$0'; [$0].vi = 0 } ;true}&&Expression($0)&&{{ [$0] = $id # '=>' # [$0] } ;true}||{if(_i>_im)_im=_i;_i=$b1;false}};
Expression=>{$b1=_i;{{ $s.vi = [$0].vi + 1; $s.tag = [$0].tag; [$0] = '' } ;true}&&Sequence(@$s)&&{{ [$0] = $s } ;true}&&{for(;{$b2=_i;SLASH($0)&&Sequence(@$s)&&{{ [$0] #= '||' # $s } ;true}||{if(_i>_im)_im=_i;_i=$b2;false}};);true}&&{{ [$0] = '{$b' # $s.vi # '=_i;' # [$0] # '}' } ;true}||{if(_i>_im)_im=_i;_i=$b1;false}};
Sequence=>{$b1=_i;{{ $p.vi = [$0].vi; $p.tag = [$0].tag; [$0] = '' } ;true}&&{for(;{$b2=_i;{$b3=_i;Prefix(@$p)||{if(_i>_im)_im=_i;_i=$b3;false}||Action(@$p)||{if(_i>_im)_im=_i;_i=$b3;false}}&&{{ [$0] #= (if ([$0] != '') '&&') # $p } ;true}||{if(_i>_im)_im=_i;_i=$b2;false}};);true}&&{{ [$0] #= (if ([$0] == '') 'true' else '||{if(_i>_im)_im=_i;_i=$b' # [$0].vi # ';false}') } ;true}||{if(_i>_im)_im=_i;_i=$b1;false}};
Action=>{$b1=_i;{$m1=_i;PikaBlock($0)&&{$b = _s{$m1:_i-$m1};true}}&&Spacing($0)&&{{ for ($s = '{'; $b != ''; ) { $s #= $b{:i = find($b, "$/\t\r\n")}; if (($b = $b{i:}){0} == '$') { if ($b{:9} == "\x24\x24parser.") { $s #= ''; $b = $b{9:} } else if ($b{:3} == "\x24\x24s") { $s #= '_s'; $b = $b{3:} } else if ($b{:3} == "\x24\x24i") { $s #= '_i'; $b = $b{3:} } else if ($b{:2} == "\x24\x24") { $s #= '[$0]'; $b = $b{2:} } else { $s #= '$'; $b = $b{1:} } } else if ($b{:2} == '//') {
 $s #= $b{:i = find($b, "\n") + 1}; $b = $b{i:} } else if ($b{0} == '/') { $s #= '/'; $b = $b{1:} } else { if ($s{length($s) - 1} != ' ') $s #= ' '; $b = $b{span($b, "\t\r\n "):} } }; [$0] = $s # ';true}' } ;true}||{if(_i>_im)_im=_i;_i=$b1;false}};
Prefix=>{$b1=_i;{{ $c.vi = [$0].vi; $c.tag = [$0].tag } ;true}&&AND($0)&&Capture(@$c)&&{{ [$0] = '{$l' # [$0].vi # '=_i' # ';$x=' # $c # ';_i=$l' # [$0].vi # ';$x}' } ;true}||{if(_i>_im)_im=_i;_i=$b1;false}||NOT($0)&&Capture(@$c)&&{{ [$0] = '{$l' # [$0].vi # '=_i' # ';$x=' # $c # ';_i=$l' # [$0].vi # ';!$x}' } ;true}||{if(_i>_im)_im=_i;_i=$b1;false}||Capture($0)||{if(_i>_im)_im=_i;_i=$b1;false}};
Capture=>{$b1=_i;Variable(@$v)&&EQUALS($0)&&Tagged($0)&&{{ [$0] = '{$m' # [$0].vi # '=_i;' # [$0] # '&&{' # $v # ' = _s{$m' # [$0].vi # ':' # '_i-$m' # [$0].vi # '};true}}' } ;true}||{if(_i>_im)_im=_i;_i=$b1;false}||Tagged($0)||{if(_i>_im)_im=_i;_i=$b1;false}};
Tagged=>{$b1=_i;Variable(@$v)&&COLON($0)&&{{ $t.vi = [$0].vi; $t.tag = '@' # $v } ;true}&&Suffix(@$t)&&{{ [$0] = $t } ;true}||{if(_i>_im)_im=_i;_i=$b1;false}||Suffix($0)||{if(_i>_im)_im=_i;_i=$b1;false}};
Suffix=>{$b1=_i;Primary($0)&&{{$b2=_i;QUESTION($0)&&{{ [$0] = '{' # [$0] # ';true}' } ;true}||{if(_i>_im)_im=_i;_i=$b2;false}||STAR($0)&&{{ [$0] = '{for(;' # [$0] # ';);true}' } ;true}||{if(_i>_im)_im=_i;_i=$b2;false}||PLUS($0)&&{{ [$0] = '{false;for(;' # [$0] # ';)true}' } ;true}||{if(_i>_im)_im=_i;_i=$b2;false}};true}||{if(_i>_im)_im=_i;_i=$b1;false}};
Primary=>{$b1=_i;Identifier($0)&&{$l1=_i;$x=LEFTARROW($0);_i=$l1;!$x}&&{{ [$0] #= '(' # [$0].tag # ')' } ;true}||{if(_i>_im)_im=_i;_i=$b1;false}||Literal($0)&&{{ l = length([$0]); if (l == 0) [$0] = 'true' else if (l == 1) [$0] = '(_s{_i}===' # escape([$0]) # ')&&{++_i;true}' else [$0] = '(_s{_i:' # l # '}===' # escape([$0]) # ')&&{_i+=' # l # ';true}' } ;true}||{if(_i>_im)_im=_i;_i=$b1;false}||Class($0)&&{{ [$0] = '(span(_s{_i},' # escape([$0]) # ')==1)&&{++_i;true}' } ;true}||{if(_i>_im)_im=_i;_i=$b1;false}||DOT($0)&&{{ [$0] = '(_s{_i}!='''')&&{++_i;true}' } ;true}||{if(_i>_im)_im=_i;_i=$b1;false}||OPEN($0)&&Expression($0)&&CLOSE($0)||{if(_i>_im)_im=_i;_i=$b1;false}};
Identifier=>{$b1=_i;{$m1=_i;{$b2=_i;IdentStart($0)&&{for(;IdentCont($0););true}||{if(_i>_im)_im=_i;_i=$b2;false}}&&{[$0] = _s{$m1:_i-$m1};true}}&&Spacing($0)||{if(_i>_im)_im=_i;_i=$b1;false}};
IdentStart=>{$b1=_i;(span(_s{_i},'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_')==1)&&{++_i;true}||{if(_i>_im)_im=_i;_i=$b1;false}};
IdentCont=>{$b1=_i;IdentStart($0)||{if(_i>_im)_im=_i;_i=$b1;false}||(span(_s{_i},'0123456789')==1)&&{++_i;true}||{if(_i>_im)_im=_i;_i=$b1;false}};
Variable=>{$b1=_i;{$b2=_i;(_s{_i:2}==='$$')&&{_i+=2;true}&&{{ [$0] = '[$0]' } ;true}||{if(_i>_im)_im=_i;_i=$b2;false}||{$m2=_i;PikaVar($0)&&{[$0] = _s{$m2:_i-$m2};true}}&&{{ [$0] = '$' # [$0] } ;true}||{if(_i>_im)_im=_i;_i=$b2;false}}&&Spacing($0)||{if(_i>_im)_im=_i;_i=$b1;false}};
Literal=>{$b1=_i;{{ [$0] = '' } ;true}&&(span(_s{_i},"'")==1)&&{++_i;true}&&{for(;{$b2=_i;{$l2=_i;$x=(span(_s{_i},"'")==1)&&{++_i;true};_i=$l2;!$x}&&Char(@$c)&&{{ [$0] #= $c } ;true}||{if(_i>_im)_im=_i;_i=$b2;false}};);true}&&(span(_s{_i},"'")==1)&&{++_i;true}&&Spacing($0)||{if(_i>_im)_im=_i;_i=$b1;false}||(span(_s{_i},'"')==1)&&{++_i;true}&&{for(;{$b2=_i;{$l2=_i;$x=(span(_s{_i},'"')==1)&&{++_i;true};_i=$l2;!$x}&&Char(@$c)&&{{ [$0] #= $c } ;true}||{if(_i>_im)_im=_i;_i=$b2;false}};);true}&&(span(_s{_i},'"')==1)&&{++_i;true}&&Spacing($0)||{if(_i>_im)_im=_i;_i=$b1;false}};
Class=>{$b1=_i;{{ [$0] = '' } ;true}&&(_s{_i}==='[')&&{++_i;true}&&{for(;{$b2=_i;{$l2=_i;$x=(_s{_i}===']')&&{++_i;true};_i=$l2;!$x}&&Range(@$r)&&{{ [$0] #= $r } ;true}||{if(_i>_im)_im=_i;_i=$b2;false}};);true}&&(_s{_i}===']')&&{++_i;true}&&Spacing($0)||{if(_i>_im)_im=_i;_i=$b1;false}};
Range=>{$b1=_i;Char(@$f)&&(_s{_i}==='-')&&{++_i;true}&&Char(@$t)&&{{ [$0] = ''; for (i = ordinal($f); i <= ordinal($t); ++i) [$0] #= char(i); } ;true}||{if(_i>_im)_im=_i;_i=$b1;false}||Char(@[$0])||{if(_i>_im)_im=_i;_i=$b1;false}};
Char=>{$b1=_i;(_s{_i}==='\')&&{++_i;true}&&{$m1=_i;(span(_s{_i},"nrt'\"[]\\")==1)&&{++_i;true}&&{$x = _s{$m1:_i-$m1};true}}&&{{ [$0] = "\n\r\t'\"[]\\"{find("nrt'\"[]\\", $x)} } ;true}||{if(_i>_im)_im=_i;_i=$b1;false}||(_s{_i}==='\')&&{++_i;true}&&{$m1=_i;{$b2=_i;(span(_s{_i},'0123')==1)&&{++_i;true}&&(span(_s{_i},'01234567')==1)&&{++_i;true}&&(span(_s{_i},'01234567')==1)&&{++_i;true}||{if(_i>_im)_im=_i;_i=$b2;false}}&&{$x = _s{$m1:_i-$m1};true}}&&{{ [$0] = char($x{0} * 64 + $x{1} * 8 + $x{2}) } ;true}||{if(_i>_im)_im=_i;_i=$b1;false}||(_s{_i}==='\')&&{++_i;true}&&{$m1=_i;{$b2=_i;(span(_s{_i},'01234567')==1)&&{++_i;true}&&(span(_s{_i},'01234567')==1)&&{++_i;true}||{if(_i>_im)_im=_i;_i=$b2;false}}&&{$x = _s{$m1:_i-$m1};true}}&&{{ [$0] = char($x{0} * 8 + $x{1}) } ;true}||{if(_i>_im)_im=_i;_i=$b1;false}||(_s{_i}==='\')&&{++_i;true}&&{$m1=_i;{$b2=_i;(span(_s{_i},'01234567')==1)&&{++_i;true}||{if(_i>_im)_im=_i;_i=$b2;false}}&&{$x = _s{$m1:_i-$m1};true}}&&{{ [$0] = char($x{0}) } ;true}||{if(_i>_im)_im=_i;_i=$b1;false}||{$l1=_i;$x=(span(_s{_i},"\\\x00\x01\x02\x03\x04\x05\x06\a\b\t\n\v\f\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f")==1)&&{++_i;true};_i=$l1;!$x}&&{$m1=_i;(_s{_i}!='')&&{++_i;true}&&{[$0] = _s{$m1:_i-$m1};true}}||{if(_i>_im)_im=_i;_i=$b1;false}};
Spacing=>{$b1=_i;{for(;{$b2=_i;Space($0)||{if(_i>_im)_im=_i;_i=$b2;false}||Comment($0)||{if(_i>_im)_im=_i;_i=$b2;false}};);true}||{if(_i>_im)_im=_i;_i=$b1;false}};
Comment=>{$b1=_i;(_s{_i}==='#')&&{++_i;true}&&{for(;{$b2=_i;{$l2=_i;$x=EndOfLine($0);_i=$l2;!$x}&&(_s{_i}!='')&&{++_i;true}||{if(_i>_im)_im=_i;_i=$b2;false}};);true}&&{$b2=_i;EndOfLine($0)||{if(_i>_im)_im=_i;_i=$b2;false}||EndOfFile($0)||{if(_i>_im)_im=_i;_i=$b2;false}}||{if(_i>_im)_im=_i;_i=$b1;false}};
Space=>{$b1=_i;(_s{_i}===' ')&&{++_i;true}||{if(_i>_im)_im=_i;_i=$b1;false}||(_s{_i}==="\t")&&{++_i;true}||{if(_i>_im)_im=_i;_i=$b1;false}||EndOfLine($0)||{if(_i>_im)_im=_i;_i=$b1;false}};
EndOfLine=>{$b1=_i;(_s{_i:2}==="\r\n")&&{_i+=2;true}||{if(_i>_im)_im=_i;_i=$b1;false}||(_s{_i}==="\n")&&{++_i;true}||{if(_i>_im)_im=_i;_i=$b1;false}||(_s{_i}==="\r")&&{++_i;true}||{if(_i>_im)_im=_i;_i=$b1;false}};
EndOfFile=>{$b1=_i;{$l1=_i;$x=(_s{_i}!='')&&{++_i;true};_i=$l1;!$x}||{if(_i>_im)_im=_i;_i=$b1;false}};
PikaVar=>{$b1=_i;(span(_s{_i},'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_')==1)&&{++_i;true}&&{for(;{$b2=_i;{(_s{_i}==='.')&&{++_i;true};true}&&(span(_s{_i},'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_0123456789')==1)&&{++_i;true}||{if(_i>_im)_im=_i;_i=$b2;false}};);true}||{if(_i>_im)_im=_i;_i=$b1;false}};
PikaBlock=>{$b1=_i;(_s{_i}==='{')&&{++_i;true}&&{for(;{$b2=_i;{$l2=_i;$x=(_s{_i}==='{')&&{++_i;true};_i=$l2;$x}&&PikaBlock($0)||{if(_i>_im)_im=_i;_i=$b2;false}||{$l2=_i;$x=(span(_s{_i},"\"'")==1)&&{++_i;true};_i=$l2;$x}&&PikaString($0)||{if(_i>_im)_im=_i;_i=$b2;false}||{$l2=_i;$x={$b3=_i;(_s{_i:2}==='/*')&&{_i+=2;true}||{if(_i>_im)_im=_i;_i=$b3;false}||(_s{_i:2}==='//')&&{_i+=2;true}||{if(_i>_im)_im=_i;_i=$b3;false}};_i=$l2;$x}&&PikaComment($0)||{if(_i>_im)_im=_i;_i=$b2;false}||{$l2=_i;$x=(_s{_i}==='}')&&{++_i;true};_i=$l2;!$x}&&(_s{_i}!='')&&{++_i;true}||{if(_i>_im)_im=_i;_i=$b2;false}};);true}&&(_s{_i}==='}')&&{++_i;true}||{if(_i>_im)_im=_i;_i=$b1;false}};
PikaString=>{$b1=_i;(_s{_i}==='"')&&{++_i;true}&&{for(;{$b2=_i;{$b3=_i;(_s{_i}==='\')&&{++_i;true}||{if(_i>_im)_im=_i;_i=$b3;false}||{$l3=_i;$x=(_s{_i}==='"')&&{++_i;true};_i=$l3;!$x}||{if(_i>_im)_im=_i;_i=$b3;false}}&&(_s{_i}!='')&&{++_i;true}||{if(_i>_im)_im=_i;_i=$b2;false}};);true}&&(_s{_i}==='"')&&{++_i;true}||{if(_i>_im)_im=_i;_i=$b1;false}||(_s{_i}==="'")&&{++_i;true}&&{for(;{$b2=_i;{$b3=_i;(_s{_i:2}==="''")&&{_i+=2;true}||{if(_i>_im)_im=_i;_i=$b3;false}||{$l3=_i;$x=(_s{_i}==="'")&&{++_i;true};_i=$l3;!$x}&&(_s{_i}!='')&&{++_i;true}||{if(_i>_im)_im=_i;_i=$b3;false}}||{if(_i>_im)_im=_i;_i=$b2;false}};);true}&&(_s{_i}==="'")&&{++_i;true}||{if(_i>_im)_im=_i;_i=$b1;false}};
PikaComment=>{$b1=_i;(_s{_i:2}==='/*')&&{_i+=2;true}&&{for(;{$b2=_i;{$l2=_i;$x=(_s{_i:2}==='*/')&&{_i+=2;true};_i=$l2;!$x}&&(_s{_i}!='')&&{++_i;true}||{if(_i>_im)_im=_i;_i=$b2;false}};);true}&&(_s{_i:2}==='*/')&&{_i+=2;true}||{if(_i>_im)_im=_i;_i=$b1;false}||(_s{_i:2}==='//')&&{_i+=2;true}&&{for(;{$b2=_i;{$l2=_i;$x=EndOfLine($0);_i=$l2;!$x}&&(_s{_i}!='')&&{++_i;true}||{if(_i>_im)_im=_i;_i=$b2;false}};);true}&&{$b2=_i;EndOfLine($0)||{if(_i>_im)_im=_i;_i=$b2;false}||EndOfFile($0)||{if(_i>_im)_im=_i;_i=$b2;false}}||{if(_i>_im)_im=_i;_i=$b1;false}};
LEFTARROW=>{$b1=_i;(_s{_i:2}==='<-')&&{_i+=2;true}&&Spacing($0)||{if(_i>_im)_im=_i;_i=$b1;false}};
SLASH=>{$b1=_i;(_s{_i}==='/')&&{++_i;true}&&Spacing($0)||{if(_i>_im)_im=_i;_i=$b1;false}};
AND=>{$b1=_i;(_s{_i}==='&')&&{++_i;true}&&Spacing($0)||{if(_i>_im)_im=_i;_i=$b1;false}};
NOT=>{$b1=_i;(_s{_i}==='!')&&{++_i;true}&&Spacing($0)||{if(_i>_im)_im=_i;_i=$b1;false}};
QUESTION=>{$b1=_i;(_s{_i}==='?')&&{++_i;true}&&Spacing($0)||{if(_i>_im)_im=_i;_i=$b1;false}};
STAR=>{$b1=_i;(_s{_i}==='*')&&{++_i;true}&&Spacing($0)||{if(_i>_im)_im=_i;_i=$b1;false}};
PLUS=>{$b1=_i;(_s{_i}==='+')&&{++_i;true}&&Spacing($0)||{if(_i>_im)_im=_i;_i=$b1;false}};
OPEN=>{$b1=_i;(_s{_i}==='(')&&{++_i;true}&&Spacing($0)||{if(_i>_im)_im=_i;_i=$b1;false}};
CLOSE=>{$b1=_i;(_s{_i}===')')&&{++_i;true}&&Spacing($0)||{if(_i>_im)_im=_i;_i=$b1;false}};
DOT=>{$b1=_i;(_s{_i}==='.')&&{++_i;true}&&Spacing($0)||{if(_i>_im)_im=_i;_i=$b1;false}};
COLON=>{$b1=_i;(_s{_i}===':')&&{++_i;true}&&Spacing($0)||{if(_i>_im)_im=_i;_i=$b1;false}};
EQUALS=>{$b1=_i;(_s{_i}==='=')&&{++_i;true}&&Spacing($0)||{if(_i>_im)_im=_i;_i=$b1;false}};
_i = _im = 0; if ([$rule]($dd)) { [$iref] = _i; true } else { [$iref] = _im; false }
};
['ppeg.fail'] = function {
	args(@error, @source, @offset);
	singleLine = function { replace($0, "\t\r\n", ' ', find, 1) };
	throw(bake("{$0} : {singleLine(source{offset - 8:8})} <!!!!> {singleLine(source{offset:40})}"));
};
['ppeg.parse'] = function {
	vargs(@ppeg, @source, , @dd, @rule);
	defaults(@dd, @o, @rule, 'root');
	::pps = source;
	::ppi = ::ppm = 0;
	if (![ppeg][rule](dd)) ppeg.fail("Parsing error: ", source, ::ppm);
	( coalesce(dd, void) )
};
['ppeg.root'] = function {{$b1=::ppi;{{ $t = ::ppeg.$compileTo; ::ppeg.$target = (if ($t{:2} == '::') $t else ('[' # escape($t) # ']')); } ;true}&&{{$b2=::ppi;::ppeg.Spacing($0)&&{$m2=::ppi;::ppeg.PikaBlock($0)&&{$b=::pps{$m2:::ppi-$m2};true}}&&{{ evaluate(replace($b, "\x24\x24parser", ::ppeg.$target), ::ppeg.$compileTo) } ;true}||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b2;false}};true}&&::ppeg.Spacing($0)&&::ppeg.Grammar($0)||{if(::ppi>::ppm)::ppm=::ppi;::ppi=$b1;false}}};
['ppeg.trace'] = function {
	args(@what);
	::ppeg.trace.what = what;
	::ppeg.trace.whatLen = length(what);
	trace(function {
		if (exists(@^$callee) && ^$callee{: ::ppeg.trace.whatLen} == ::ppeg.trace.what) {
			func = ^$callee{::ppeg.trace.whatLen + 1:};
			if (func{0} != '$') {
				args(@source, @offset, @lvalue, @result, @level, @exit);
				if (level == ERROR_TRACE_LEVEL) trace()
				else if (level == CALL_TRACE_LEVEL) {
					if (!exit) append(@::ppeg.trace.stack, ::ppi)
					else {
						begun = ::ppeg.trace.stack[--::ppeg.trace.stack.n];
						ended = (if (result == false) ::ppm else ::ppi);
						s = ::pps;
						print(repeat(' ', ppeg.trace.stack.n) # func # ' ' # limitLength(escape(s{begun:ended-begun}), 40)
								# ' = ' # result # '    ' # limitLength(escape(s{ended:100}), 40))
					};
				}
			}
		}
	}, CALL_TRACE_LEVEL);	
};
