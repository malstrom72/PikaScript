if (system('ver') == 0) {
	system('mkdir \temp\ 2>NUL');
	dir = function {
		// TODO : add /* (or just *) if necessary so that we can do "dir x" if x is a dir...
		args(@files, @action);
		pipeFile = bake('\temp\{radix(trunc(random(65536 * 65536) + time()), 16)}');
		system(bake('dir /b /ad "{replace(files, ''/'', ''\'')}" >{pipeFile} 2>NUL'));
		tokenize(load(pipeFile), >action($0 # '/'));
		system(bake('dir /b /a-d "{replace(files, ''/'', ''\'')}" >{pipeFile} 2>NUL'));
		tokenize(load(pipeFile), >action($0));
		system(bake('del {pipeFile} 2>NUL'));
	};
	::platform = 'windows';
} else if (system('bash --version') == 0) {
	dir = function {
		// TODO : add /* (or just *) if necessary so that we can do "dir x" if x is a dir...
		args(@files, @action);
		pipeFile = bake('/tmp/{radix(trunc(random(65536 * 65536) + time()), 16)}');
		system(bake('ls -k -p -1 -d {replace(files, '' '', ''\ '')} >{pipeFile} 2>/dev/null'));
		x = rfind(files, '/') + 1;
		// TODO: un-octalize and possibly even un-UTF result (notice: dropped '-b' from ls for now)
		tokenize(load(pipeFile), >action($0{x:}));
		system(bake('rm {pipeFile}'));
	};
	::platform = 'unix';
} else {
	throw("Unsupported platform");
	::platform = 'unknown';
};

; void
