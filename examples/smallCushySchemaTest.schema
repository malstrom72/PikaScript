integer				<-	intGroup _ ([-+*/] _ intGroup _)*
intGroup			<- 	('-' _)* ('(' _ integer ')' / [0-9]+ / '$') _
_                 	<- 	[ \t\r\n]*
identifier 			<-	[a-zA-Z_$][a-zA-Z0-9_$.]*
hex32               <-  '0x' hex hex hex hex hex hex hex hex
hex                 <-  [0-9A-Fa-f]

<bool> = 'false'|'true'
<real> = *
<int> = %integer
<string> = *
<rect> = { <int>,<int>,<int>,<int> }
<var> = %identifier

<root> = {
	bounds: <rect>
	views: {
		<view>
		...
	}
	[ optional: * ]
}

<view> =	<subCushy>
			| <caption>
			| <click>

/*
	`cushy` can be used to dynamically inject a variable .cushy layout file
*/
<subCushy> = {
	type: 'cushy'
	[ bounds: <rect> ]
	layoutVariable: <var>
	[ transitions: <bool> ]					// Transition definitions in the .cushy file will be honored when changing layout.
	[ uiScaling: <bool> ]					// User scale choice is honored for this sub-cushy.
}

<caption> =	{
	type: 'caption'
	[ bounds: <rect> ]
	[ offset: { <int>, <int> } ]
	text: *
}

<click> = {
	type: 'click'									// Default click mask takes right-clicks too!!
	(
	  action: <string>
	  [ params: <string> ]
	  [ mask: <string> ]							// See above
	) | (
	  actions: {
		{ <string>, [ <string> ], [ <string> ] }
		...
	  }
	)
	[ thru: <bool>, asdf:'qwer' ]
	[ asdf: * ]
	[ hint: <string> ]								// Empty hint ('') is different from not declaring a hint at all since an empty hint blocks other hints from showing.
	[ 	// Cursor is only shown if action is enabled.
		cursor: <string>|<var>
		| cursor: { [ windows: <string> ], [ mac: <string> ] }
	]
	[ mousePosition: <var> ] 						// will be updated to mouse position '<x>,<y>' on click and also continuously during mouse-tracking provided that there is an action defined with a matching 'click mask' (can be 'nop') *and* `thru` is false
}

