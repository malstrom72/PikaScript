// WARNING! Currently, the windows version of pikascript (2015-09-29) does CRLF conversion when loading / saving files!

// tips: hexdump(reverse(x)) for reading little-endian
hexdump = function {
	vargs(@binary,, @offset, @count, @cols);
	defaults(@offset, 0, @cols, 32);
	defaults(@count, length(binary) - offset);
	s = a = '';
	for ({ i = 0; n = min(count, length(binary) - offset) }; i < n; ++i) {
		s #= radix((o = ordinal(c = binary{offset + i})), 16, 2) # ' ';
		a #= (if (o >= 32 && o < 127) c else '.');
		if ((i % cols) == (cols - 1) || i == n - 1) {
			print(s # repeat(' ', (cols * 3) - length(s)) # '| ' # a);
			s = a = '';
		}
	}
};

// tip: bytesToInt(reverse(x{:len})) for little endian
bytesToInt = function {
	args(@b);
	for (i = 0; b != ''; b = b{1:}) i = (i << 8) | ordinal(b{0})
};

// tip: reverse(intToBytes(x, len)) for little endian
intToBytes = function {
	args(@i, @len);
	for (b = ''; length(b) < len; i >>= 8) b = char(i & 0xFF) # b
};

if (coalesce(@$1) == '?') {
	print(
"
hexdump('binary', [+offset], [+count], [+cols])
+integer = bytesToInt('binary')
'binary' = intToBytes(+integer, +length)

tip: bytesToInt(reverse(b{:l})) for decoding little endian integer
tip: reverse(intToBytes(i, l)) for encoding little endian integer
"
		);
};

( void )
