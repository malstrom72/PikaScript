{
    $$parser.nextName = '9';
    $$parser.symbolChars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
    $$parser.createNextName => {
        for (; {
            for ($nn = $$parser.nextName; {
                    $nn !== '' && {
                        $nc = $$parser.symbolChars{find($$parser.symbolChars, right($nn, 1)) + 1};
                        $nc === ''
                    }
                }; $nn = chop($nn, 1));
            if ($nn === '') {
                $nn = 'a' # repeat('0', length($$parser.nextName));
            } else {
                $nn = chop($nn, 1) # $nc;
                $nn #= repeat('0', length($$parser.nextName) - length($nn));
            };
            $$parser.nextName = $nn;
            exists(@$$parser.preserved[$nn])
        }; );
        ( $$parser.nextName )
    };

    $$parser.rename => {
        args(@$s);
        if (!exists(@$$parser.preserved[$s])) {
            if (!exists(@$$parser.renames[$s])) {
                $$parser.renames[$s] = $$parser.createNextName();
            };
            $s = $$parser.renames[$s];
        };
        ( $s )
    };
}

root            <-                                  { $$ = '' }
                    (ws
                    / c=(qString / aString)         { $$ #= $c }
                    / t:token                       { $$ #= $t }
                        (ws t:token                 { $$ #= ' ' # $t }
                        )*
                    / c=.                           { $$ #= $c }
                    )* eof

token           <-  n=number                        { $$ = $n }
                    / i=identifier                  { $$ = $$parser.rename($i) }

number          <-  '0x' hex+
                    / ([0-9] [0-9]*) ('.' [0-9]+)? ( [eE][-+]? [0-9]+ )?

ws              <-  ([ \t\r\n] / comment)+

comment         <-  '/*' (preserveList / !'*/' .)* '*/' / "//" (preserveList / !eol .)* (eol / eof)

preserveList    <-  '@preserve:' [ \t]* preserveId ([ \t]* ',' [ \t]* preserveId)*

preserveId      <-  i=identifier                    { $$parser.preserved[$i] = true }

identifier      <-  [$a-zA-Z_0-9]+

qString         <-  '"' ( !["\\\0-\37] . / escape )* '"'

aString         <-  "'" ( !['\\\0-\37] . / escape )* "'"

escape          <-  "\\" ( 'x' hex hex / 'u' hex hex hex hex / . )

hex             <-  [0-9a-fA-F]

eol             <-  "\r\n" / "\n" / "\r"

eof             <-  !.

